params - задаЄт имена переменных дл€ которых значени€ придут в командной строке
----------------------------------
CreateFolder - создаЄт папки, дл€ создани€ подкаталого достаточно ввести folder/subfolder
пример:
CreateFolder css js js/refs
создаст 2 папки css и js, причЄм в js будет лежать refs

аналогично работает CreateFile

заметки:
	если ввести folder/subfolder - folder не существует будет ошибка
-----------------------------------
при использовании copyFolder(File) не надо указывать откуда, т.к. все исходники должны лежать в папке задани€, то программа сама найдЄт в ней нужный файл, а параметр будет указывать куда скопировать
пример:
copy js/jquery.js
результат:
найдЄт файл jquery.js в папка с заданием и скопирует его в каталог проекта js/jquery.js, каталог лучше создать заранее(пока не решена проблема)
-----------------------------------
{} - особый параметр код
-----------------------------------
$val$ - переменна€ шаблона
-----------------------------------
val - объ€вление переменной
-----------------------------------
пример:
	var a(2);
	var code({
	mnogoCoda
}
writeToFile fileName.txt {for(0,a,{code})  $a$}
-------------------------------------------
insert - особый тип переменной, содержит команды, например append - добавл€ет в запись в конец объекта, пример:
insert InsertVar {
	append {pulic SuperClass()} {Console.WriteLine();}
};
insertToFile fileName InsertVar
было 
	public SuperClass() {
		... какой-то код	
	}
станет public SuperClass() {
		... какой-то код
		Console.WriteLine(); - вставленна€ строчка
	}	

используетс€ в команде insertToFile
-------------------------------------------
объ€вление переменных:
val им€_переменной {значение}
insert им€_переменной {команды}
-------------------------------------------
обращение к переменной $им€_переменной$, при чЄм можно обращатьс€ и внутри {}, в люом месте кода
------------------------------------------- 